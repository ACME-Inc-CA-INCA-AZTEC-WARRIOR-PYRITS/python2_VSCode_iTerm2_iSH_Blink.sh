{
    "name": "jupyter",
    "displayName": "Jupyter",
    "description": "Linting, Debugging (multi-threaded, remote), Intellisense, Jupyter Notebooks, code formatting, refactoring, unit tests, snippets, and more.",
    "version": "2020.9.0-dev",
    "featureFlags": {
        "usingNewInterpreterStorage": true
    },
    "languageServerVersion": "0.5.30",
    "publisher": "ms-python",
    "enableProposedApi": true,
    "author": {
        "name": "Microsoft Corporation"
    },
    "license": "MIT",
    "homepage": "https://github.com/Microsoft/vscode-python",
    "repository": {
        "type": "git",
        "url": "https://github.com/Microsoft/vscode-python"
    },
    "bugs": {
        "url": "https://github.com/Microsoft/vscode-python/issues"
    },
    "qna": "https://stackoverflow.com/questions/tagged/visual-studio-code+python",
    "icon": "icon.png",
    "galleryBanner": {
        "color": "#1e415e",
        "theme": "dark"
    },
    "engines": {
        "vscode": "^1.48.0"
    },
    "keywords": [
        "python",
        "django",
        "unittest",
        "multi-root ready"
    ],
    "categories": [
        "Programming Languages",
        "Debuggers",
        "Linters",
        "Snippets",
        "Formatters",
        "Other",
        "Extension Packs",
        "Data Science",
        "Machine Learning",
        "Notebooks"
    ],
    "activationEvents": [
        "onLanguage:python",
        "onLanguage:jupyter",
        "onCommand:jupyter.datascience.viewJupyterOutput",
        "onCommand:jupyter.datascience.export",
        "onCommand:jupyter.datascience.exportAsPythonScript",
        "onCommand:jupyter.datascience.exportToHTML",
        "onCommand:jupyter.datascience.exportToPDF",
        "onCommand:jupyter.datascience.createnewinteractive",
        "onCommand:jupyter.datascience.importnotebook",
        "onCommand:jupyter.datascience.importnotebookfile",
        "onCommand:jupyter.datascience.opennotebook",
        "onCommand:jupyter.datascience.opennotebookInPreviewEditor",
        "onCommand:jupyter.datascience.selectjupyteruri",
        "onCommand:jupyter.datascience.exportfileasnotebook",
        "onCommand:jupyter.datascience.exportfileandoutputasnotebook",
        "onCommand:jupyter.datascience.selectJupyterInterpreter",
        "onCommand:jupyter.datascience.selectjupytercommandline",
        "onCommand:jupyter.enableSourceMapSupport",
        "onNotebookEditor:jupyter-notebook",
        "workspaceContains:*.ipynb"
    ],
    "main": "./out/client/extension",
    "contributes": {
        "configuration": {
            "type": "object",
            "title": "Python",
            "properties": {
                "python.diagnostics.sourceMapsEnabled": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable source map support for meaningful stack traces in error logs.",
                    "scope": "application"
                },
                "python.logging.level": {
                    "type": "string",
                    "default": "error",
                    "enum": [
                        "off",
                        "error",
                        "warn",
                        "info",
                        "debug"
                    ],
                    "description": "The logging level the extension logs at, defaults to 'error'",
                    "scope": "machine"
                },
                "python.experiments.enabled": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enables/disables A/B tests.",
                    "scope": "machine"
                },
                "python.experiments.optInto": {
                    "type": "array",
                    "default": [],
                    "items": {
                        "enum": [
                            "AlwaysDisplayTestExplorer - experiment",
                            "ShowExtensionSurveyPrompt - enabled",
                            "Reload - experiment",
                            "AA_testing - experiment",
                            "LocalZMQKernel - experiment",
                            "NativeNotebook - experiment",
                            "CustomEditorSupport - experiment",
                            "UseTerminalToGetActivatedEnvVars - experiment",
                            "CollectLSRequestTiming - experiment",
                            "CollectNodeLSRequestTiming - experiment",
                            "DeprecatePythonPath - experiment",
                            "RunByLine - experiment",
                            "tryPylance",
                            "All"
                        ]
                    },
                    "description": "List of experiment to opt into. If empty, user is assigned the default experiment groups. See https://github.com/microsoft/vscode-python/wiki/Experiments for more details.",
                    "scope": "machine"
                },
                "python.experiments.optOutFrom": {
                    "type": "array",
                    "default": [],
                    "items": {
                        "enum": [
                            "AlwaysDisplayTestExplorer - experiment",
                            "ShowExtensionSurveyPrompt - enabled",
                            "Reload - experiment",
                            "AA_testing - experiment",
                            "LocalZMQKernel - experiment",
                            "NativeNotebook - experiment",
                            "CustomEditorSupport - experiment",
                            "UseTerminalToGetActivatedEnvVars - experiment",
                            "CollectLSRequestTiming - experiment",
                            "CollectNodeLSRequestTiming - experiment",
                            "DeprecatePythonPath - experiment",
                            "RunByLine - experiment",
                            "tryPylance",
                            "All"
                        ]
                    },
                    "description": "List of experiment to opt out of. If empty, user is assigned the default experiment groups. See https://github.com/microsoft/vscode-python/wiki/Experiments for more details.",
                    "scope": "machine"
                },
                "jupyter.datascience.allowImportFromNotebook": {
                    "type": "boolean",
                    "default": true,
                    "description": "Allows a user to import a jupyter notebook into a python file anytime one is opened.",
                    "scope": "resource"
                },
                "jupyter.datascience.widgetScriptSources": {
                    "type": "array",
                    "default": [],
                    "items": {
                        "type": "string",
                        "enum": [
                            "jsdelivr.com",
                            "unpkg.com"
                        ],
                        "enumDescriptions": [
                            "Loads widget (javascript) scripts from https://www.jsdelivr.com/",
                            "Loads widget (javascript) scripts from https://unpkg.com/"
                        ]
                    },
                    "uniqueItems": true,
                    "markdownDescription": "Defines the location and order of the sources where scripts files for Widgets are downloaded from (e.g. ipywidgest, bqplot, beakerx, ipyleaflet, etc). Not selecting any of these could result in widgets not rendering or function correctly. See [here](https://aka.ms/PVSCIPyWidgets) for more information. Once updated you will need to restart the Kernel.",
                    "scope": "machine"
                },
                "jupyter.datascience.askForLargeDataFrames": {
                    "type": "boolean",
                    "default": true,
                    "description": "Warn the user before trying to open really large data frames.",
                    "scope": "application"
                },
                "jupyter.datascience.askForKernelRestart": {
                    "type": "boolean",
                    "default": true,
                    "description": "Warn the user before restarting a kernel.",
                    "scope": "application"
                },
                "jupyter.datascience.enabled": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable the experimental data science features in the python extension.",
                    "scope": "resource"
                },
                "jupyter.datascience.exportWithOutputEnabled": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable exporting a python file into a jupyter notebook and run all cells when doing so.",
                    "scope": "resource"
                },
                "jupyter.datascience.jupyterLaunchTimeout": {
                    "type": "number",
                    "default": 60000,
                    "description": "Amount of time (in ms) to wait for the Jupyter Notebook server to start.",
                    "scope": "resource"
                },
                "jupyter.datascience.jupyterLaunchRetries": {
                    "type": "number",
                    "default": 3,
                    "description": "Number of times to attempt to connect to the Jupyter Notebook",
                    "scope": "resource"
                },
                "jupyter.datascience.jupyterServerURI": {
                    "type": "string",
                    "default": "local",
                    "description": "When a Notebook Editor or Interactive Window session is started, create the kernel on the specified Jupyter server. Select 'local' to create a new Jupyter server on this local machine.",
                    "scope": "resource"
                },
                "jupyter.datascience.jupyterCommandLineArguments": {
                    "type": "array",
                    "default": [],
                    "description": "When a Notebook Editor or Interactive Window Jupyter server is started, these arguments will be passed to it. By default this list is generated by the Python Extension.",
                    "scope": "resource"
                },
                "jupyter.datascience.notebookFileRoot": {
                    "type": "string",
                    "default": "${fileDirname}",
                    "description": "Set the root directory for loading files for the Python Interactive window.",
                    "scope": "resource"
                },
                "jupyter.datascience.searchForJupyter": {
                    "type": "boolean",
                    "default": true,
                    "description": "Search all installed Python interpreters for a Jupyter installation when starting the Python Interactive window",
                    "scope": "resource"
                },
                "jupyter.datascience.changeDirOnImportExport": {
                    "type": "boolean",
                    "default": false,
                    "description": "When importing or exporting a Jupyter Notebook add a directory change command to allow relative path loading to work.",
                    "scope": "resource"
                },
                "jupyter.datascience.useDefaultConfigForJupyter": {
                    "type": "boolean",
                    "default": true,
                    "description": "When running Jupyter locally, create a default empty Jupyter config for the Python Interactive window",
                    "scope": "resource"
                },
                "jupyter.datascience.jupyterInterruptTimeout": {
                    "type": "number",
                    "default": 10000,
                    "description": "Amount of time (in ms) to wait for an interrupt before asking to restart the Jupyter kernel.",
                    "scope": "resource"
                },
                "jupyter.datascience.allowInput": {
                    "type": "boolean",
                    "default": true,
                    "description": "Allow the inputting of python code directly into the Python Interactive window"
                },
                "jupyter.datascience.showCellInputCode": {
                    "type": "boolean",
                    "default": true,
                    "description": "Show cell input code.",
                    "scope": "resource"
                },
                "jupyter.datascience.collapseCellInputCodeByDefault": {
                    "type": "boolean",
                    "default": true,
                    "description": "Collapse cell input code by default.",
                    "scope": "resource"
                },
                "jupyter.datascience.maxOutputSize": {
                    "type": "number",
                    "default": 400,
                    "description": "Maximum size (in pixels) of text output in the Notebook Editor before a scrollbar appears. First enable scrolling for cell outputs in settings.",
                    "scope": "resource"
                },
                "jupyter.datascience.alwaysScrollOnNewCell": {
                    "type": "boolean",
                    "default": false,
                    "description": "Automatically scroll the interactive window to show the output of the last statement executed. If false, the interactive window will only automatically scroll if the bottom of the prior cell is visible.",
                    "scope": "resource"
                },
                "jupyter.datascience.showKernelSelectionOnInteractiveWindow": {
                    "type": "boolean",
                    "default": false,
                    "description": "When set to true, enables the kernel selector in the Interactive Window. By default, the Interactive Window will use your Python Interpreters kernel.",
                    "scope": "resource"
                },
                "jupyter.datascience.enableScrollingForCellOutputs": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enables scrolling for large cell outputs in the Notebook Editor. This setting does not apply to the Python Interactive Window.",
                    "scope": "resource"
                },
                "jupyter.datascience.errorBackgroundColor": {
                    "type": "string",
                    "default": "#FFFFFF",
                    "description": "Background color (in hex) for exception messages in the Python Interactive window.",
                    "scope": "resource",
                    "deprecationMessage": "No longer necessary as the theme colors are used for error messages"
                },
                "jupyter.datascience.sendSelectionToInteractiveWindow": {
                    "type": "boolean",
                    "default": false,
                    "description": "Determines if selected code in a python file will go to the terminal or the Python Interactive window when hitting shift+enter",
                    "scope": "resource"
                },
                "jupyter.datascience.showJupyterVariableExplorer": {
                    "type": "boolean",
                    "default": true,
                    "description": "Show the variable explorer in the Python Interactive window.",
                    "deprecationMessage": "This setting no longer applies. It is ignored.",
                    "scope": "resource"
                },
                "jupyter.datascience.variableExplorerExclude": {
                    "type": "string",
                    "default": "module;function;builtin_function_or_method",
                    "description": "Types to exclude from showing in the Python Interactive variable explorer",
                    "scope": "resource"
                },
                "jupyter.datascience.codeRegularExpression": {
                    "type": "string",
                    "default": "^(#\\s*%%|#\\s*\\<codecell\\>|#\\s*In\\[\\d*?\\]|#\\s*In\\[ \\])",
                    "description": "Regular expression used to identify code cells. All code until the next match is considered part of this cell. \nDefaults to '^(#\\s*%%|#\\s*\\<codecell\\>|#\\s*In\\[\\d*?\\]|#\\s*In\\[ \\])' if left blank",
                    "scope": "resource"
                },
                "jupyter.datascience.defaultCellMarker": {
                    "type": "string",
                    "default": "# %%",
                    "description": "Cell marker used for delineating a cell in a python file.",
                    "scope": "resource"
                },
                "jupyter.datascience.markdownRegularExpression": {
                    "type": "string",
                    "default": "^(#\\s*%%\\s*\\[markdown\\]|#\\s*\\<markdowncell\\>)",
                    "description": "Regular expression used to identify markdown cells. All comments after this expression are considered part of the markdown. \nDefaults to '^(#\\s*%%\\s*\\[markdown\\]|#\\s*\\<markdowncell\\>)' if left blank",
                    "scope": "resource"
                },
                "jupyter.datascience.allowLiveShare": {
                    "type": "boolean",
                    "default": true,
                    "description": "Allow the Python Interactive window to be shared during a Live Share session",
                    "scope": "resource"
                },
                "jupyter.datascience.ignoreVscodeTheme": {
                    "type": "boolean",
                    "default": false,
                    "description": "Don't use the VS Code theme in the Python Interactive window (requires reload of VS Code). This forces the Python Interactive window to use 'Light +(default light)' and disables matplotlib defaults.",
                    "scope": "resource"
                },
                "jupyter.datascience.themeMatplotlibPlots": {
                    "type": "boolean",
                    "default": false,
                    "description": "In the Python Interactive window and Notebook Editor theme matplotlib outputs to match the VS Code editor theme.",
                    "scope": "resource"
                },
                "jupyter.datascience.liveShareConnectionTimeout": {
                    "type": "number",
                    "default": 1000,
                    "description": "Amount of time to wait for guest connections to verify they have the Python extension installed.",
                    "scope": "application"
                },
                "jupyter.datascience.decorateCells": {
                    "type": "boolean",
                    "default": true,
                    "description": "Draw a highlight behind the currently active cell.",
                    "scope": "resource"
                },
                "jupyter.datascience.enableCellCodeLens": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enables code lens for 'cells' in a python file.",
                    "scope": "resource"
                },
                "jupyter.datascience.enableAutoMoveToNextCell": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enables moving to the next cell when clicking on a 'Run Cell' code lens.",
                    "scope": "resource"
                },
                "jupyter.datascience.autoPreviewNotebooksInInteractivePane": {
                    "type": "boolean",
                    "deprecationMessage": "No longer supported. Notebooks open directly in their own editor now.",
                    "default": false,
                    "description": "When opening ipynb files, automatically preview the contents in the Python Interactive window.",
                    "scope": "resource"
                },
                "jupyter.datascience.useNotebookEditor": {
                    "type": "boolean",
                    "default": true,
                    "description": "Automatically open .ipynb files in the Notebook Editor.",
                    "scope": "resource"
                },
                "jupyter.datascience.allowUnauthorizedRemoteConnection": {
                    "type": "boolean",
                    "default": false,
                    "description": "Allow for connecting the Python Interactive window to a https Jupyter server that does not have valid certificates. This can be a security risk, so only use for known and trusted servers.",
                    "scope": "resource"
                },
                "jupyter.datascience.enablePlotViewer": {
                    "type": "boolean",
                    "default": true,
                    "description": "Modify plot output so that it can be expanded into a plot viewer window.",
                    "scope": "resource"
                },
                "jupyter.datascience.gatherToScript": {
                    "type": "boolean",
                    "default": false,
                    "description": "Gather code to a python script rather than a notebook.",
                    "scope": "resource"
                },
                "jupyter.datascience.gatherSpecPath": {
                    "type": "string",
                    "default": "",
                    "description": "This setting specifies a folder that contains additional or replacement spec files used for analysis.",
                    "scope": "resource"
                },
                "jupyter.datascience.codeLenses": {
                    "type": "string",
                    "default": "jupyter.datascience.runcell,  jupyter.datascience.runallcellsabove, jupyter.datascience.debugcell",
                    "description": "Set of commands to put as code lens above a cell. Defaults to 'jupyter.datascience.runcell,  jupyter.datascience.runallcellsabove, jupyter.datascience.debugcell'",
                    "scope": "resource"
                },
                "jupyter.datascience.debugCodeLenses": {
                    "type": "string",
                    "default": "jupyter.datascience.debugcontinue, jupyter.datascience.debugstop, jupyter.datascience.debugstepover",
                    "description": "Set of debug commands to put as code lens above a cell while debugging.",
                    "scope": "resource"
                },
                "jupyter.datascience.debugpyDistPath": {
                    "type": "string",
                    "default": "",
                    "description": "Path to debugpy bits for debugging cells.",
                    "scope": "resource"
                },
                "jupyter.datascience.stopOnFirstLineWhileDebugging": {
                    "type": "boolean",
                    "default": true,
                    "description": "When debugging a cell, stop on the first line.",
                    "scope": "resource"
                },
                "jupyter.datascience.remoteDebuggerPort": {
                    "type": "number",
                    "default": -1,
                    "description": "When debugging a cell, open this port on the remote box. If -1 is specified, a random port between 8889 and 9000 will be attempted.",
                    "scope": "resource"
                },
                "jupyter.datascience.disableJupyterAutoStart": {
                    "type": "boolean",
                    "default": false,
                    "description": "When true, disables Jupyter from being automatically started for you. You must instead run a cell to start Jupyter.",
                    "scope": "resource"
                },
                "jupyter.datascience.textOutputLimit": {
                    "type": "number",
                    "default": 20000,
                    "description": "Limit the amount of text in Python Interactive cell text output to this value. 0 to allow any amount of characters.",
                    "scope": "resource"
                },
                "jupyter.datascience.colorizeInputBox": {
                    "type": "boolean",
                    "default": true,
                    "description": "Whether or not to use the theme's peek color as the background for the input box.",
                    "scope": "resource"
                },
                "jupyter.datascience.stopOnError": {
                    "type": "boolean",
                    "default": true,
                    "description": "Stop running cells if a cell throws an exception.",
                    "scope": "resource"
                },
                "jupyter.datascience.addGotoCodeLenses": {
                    "type": "boolean",
                    "default": true,
                    "description": "After running a cell, add a 'Goto' code lens on the cell. Note, disabling all code lenses disables this code lens as well.",
                    "scope": "resource"
                },
                "jupyter.datascience.variableQueries": {
                    "type": "array",
                    "description": "Language to query mapping for returning the list of active variables in a Jupyter kernel. Used by the Variable Explorer in both the Interactive Window and Notebooks. Example: \n'[\n{\n   \"language\": \"python\",\n   \"query\": \"%who_ls\",\n  \"parseExpr\": \"'(\\\\w+)'\"\n}\n]'",
                    "scope": "machine",
                    "examples": [
                        [
                            {
                                "language": "python",
                                "query": "_rwho_ls = %who_ls\\nprint(_rwho_ls)",
                                "parseExpr": "'(\\w+)'"
                            },
                            {
                                "language": "julia",
                                "query": "whos",
                                "parseExpr": "'(\\w+)'"
                            }
                        ]
                    ]
                },
                "jupyter.datascience.interactiveWindowMode": {
                    "type": "string",
                    "enum": [
                        "perFile",
                        "single",
                        "multiple"
                    ],
                    "scope": "resource",
                    "description": "Behavior of the Python Interactive Window. 'perFile' will create a new interactive window for every file that runs a cell. 'single' allows a single window. 'multiple' allows the creation of multiple.",
                    "default": "multiple"
                },
                "jupyter.datascience.magicCommandsAsComments": {
                    "type": "boolean",
                    "default": false,
                    "description": "Uncomment shell assignments (#!), line magic (#!%) and cell magic (#!%%) when parsing code cells.",
                    "scope": "resource"
                },
                "jupyter.datascience.runMagicCommands": {
                    "type": "string",
                    "default": "",
                    "deprecationMessage": "This setting has been deprecated in favor of 'runStartupCommands'.",
                    "description": "A series of Python instructions or iPython magic commands separated by '\\n' that will be executed when the interactive window loads.",
                    "scope": "application"
                },
                "jupyter.datascience.runStartupCommands": {
                    "type": "array",
                    "default": "",
                    "description": "A series of Python instructions or iPython magic commands. Can be either an array of strings or a single string with commands separated by '\\n'. Commands will be silently executed whenever the interactive window loads. For instance, set this to '%load_ext autoreload\\n%autoreload 2' to automatically reload changes made to imported files without having to restart the interactive session.",
                    "scope": "application"
                },
                "jupyter.datascience.debugJustMyCode": {
                    "type": "boolean",
                    "default": true,
                    "description": "When debugging, debug just my code.",
                    "scope": "resource"
                },
                "jupyter.datascience.alwaysTrustNotebooks": {
                    "type": "boolean",
                    "default": false,
                    "markdownDescription": "Enabling this setting will automatically trust any opened notebook and therefore display markdown and render code cells. You will no longer be prompted to trust individual notebooks and harmful code could automatically run. \n\n[Learn more.](https://aka.ms/trusted-notebooks)",
                    "scope": "machine"
                },
                "python.insidersChannel": {
                    "type": "string",
                    "default": "off",
                    "description": "Set to \"weekly\" or \"daily\" to automatically download and install the latest Insiders builds of the python extension, which include upcoming features and bug fixes.",
                    "enum": [
                        "off",
                        "weekly",
                        "daily"
                    ],
                    "scope": "application"
                }
            }
        },
        "languages": [
            {
                "id": "jupyter",
                "aliases": [
                    "Jupyter",
                    "Notebook"
                ],
                "extensions": [
                    ".ipynb"
                ]
            }
        ],
        "notebookOutputRenderer": [
            {
                "id": "jupyter-notebook-renderer",
                "entrypoint": "./out/datascience-ui/renderers/renderers.js",
                "displayName": "Jupyter Notebook Renderer",
                "mimeTypes": [
                    "application/geo+json",
                    "application/vdom.v1+json",
                    "application/vnd.dataresource+json",
                    "application/vnd.plotly.v1+json",
                    "application/vnd.vega.v2+json",
                    "application/vnd.vega.v3+json",
                    "application/vnd.vega.v4+json",
                    "application/vnd.vega.v5+json",
                    "application/vnd.vegalite.v1+json",
                    "application/vnd.vegalite.v2+json",
                    "application/vnd.vegalite.v3+json",
                    "application/vnd.vegalite.v4+json",
                    "application/x-nteract-model-debug+json",
                    "image/gif",
                    "image/png",
                    "image/jpeg",
                    "text/latex",
                    "text/vnd.plotly.v1+html"
                ]
            }
        ],
        "notebookProvider": [
            {
                "viewType": "jupyter-notebook",
                "displayName": "Jupyter Notebook (preview)",
                "selector": [
                    {
                        "filenamePattern": "*.ipynb"
                    }
                ],
                "priority": "default"
            }
        ]
    },
    "scripts": {
        "package": "gulp clean && gulp prePublishBundle && vsce package -o ms-python-insiders.vsix",
        "compile": "tsc -watch -p ./",
        "compiled": "deemon npm run compile",
        "kill-compiled": "deemon --kill npm run compile",
        "compile-webviews-watch": "gulp compile-ipywidgets && cross-env NODE_OPTIONS=--max_old_space_size=9096 webpack --config ./build/webpack/webpack.datascience-ui.config.js --watch",
        "compile-webviews-watchd": "deemon npm run compile-webviews-watch",
        "kill-compile-webviews-watchd": "deemon --kill npm run compile-webviews-watch",
        "checkDependencies": "gulp checkDependencies",
        "postinstall": "node ./build/ci/postInstall.js",
        "lint": "tslint src/**/*.ts -t verbose",
        "prettier-fix": "prettier 'src/**/*.ts*' --write && prettier 'build/**/*.js' --write",
        "clean": "gulp clean",
        "updateBuildNumber": "gulp updateBuildNumber",
        "verifyBundle": "gulp verifyBundle",
        "webpack": "webpack"
    },
    "dependencies": {
        "@jupyter-widgets/schema": "^0.4.0",
        "@jupyterlab/coreutils": "^3.1.0",
        "@jupyterlab/services": "^4.2.0",
        "@loadable/component": "^5.12.0",
        "@nteract/messaging": "^7.0.0",
        "@types/tcp-port-used": "^1.0.0",
        "ansi-regex": "^4.1.0",
        "arch": "^2.1.0",
        "azure-storage": "^2.10.3",
        "detect-indent": "^6.0.0",
        "diff-match-patch": "^1.0.0",
        "fast-deep-equal": "^2.0.1",
        "font-awesome": "^4.7.0",
        "fs-extra": "^4.0.3",
        "fuzzy": "^0.1.3",
        "get-port": "^3.2.0",
        "glob": "^7.1.2",
        "hash.js": "^1.1.7",
        "iconv-lite": "^0.4.21",
        "inversify": "^4.11.1",
        "is-online": "^8.2.1",
        "jsonc-parser": "^2.0.3",
        "line-by-line": "^0.1.6",
        "lodash": "^4.17.19",
        "log4js": "^6.1.2",
        "md5": "^2.2.1",
        "minimatch": "^3.0.4",
        "named-js-regexp": "^1.3.3",
        "node-fetch": "^2.6.0",
        "node-stream-zip": "^1.6.0",
        "onigasm": "^2.2.2",
        "pdfkit": "^0.11.0",
        "pidusage": "^1.2.0",
        "portfinder": "^1.0.25",
        "reflect-metadata": "^0.1.12",
        "request": "^2.87.0",
        "request-progress": "^3.0.0",
        "rxjs": "^6.5.4",
        "rxjs-compat": "^6.5.4",
        "sanitize-filename": "^1.6.3",
        "semver": "^5.5.0",
        "stack-trace": "0.0.10",
        "string-argv": "^0.3.1",
        "strip-ansi": "^5.2.0",
        "sudo-prompt": "^8.2.0",
        "svg-to-pdfkit": "^0.1.8",
        "tcp-port-used": "^1.0.1",
        "tmp": "^0.0.29",
        "tree-kill": "^1.2.2",
        "typescript-char": "^0.0.0",
        "uint64be": "^1.0.1",
        "unicode": "^10.0.0",
        "untildify": "^3.0.2",
        "vscode-extension-telemetry": "0.1.4",
        "vscode-jsonrpc": "^6.0.0-next.4",
        "vscode-tas-client": "^0.1.4",
        "vsls": "^0.3.1291",
        "winreg": "^1.2.4",
        "winston": "^3.2.1",
        "ws": "^6.0.0",
        "xml2js": "^0.4.19",
        "zeromq": "^6.0.0-beta.6"
    },
    "devDependencies": {
        "@babel/cli": "^7.8.4",
        "@babel/core": "^7.4.4",
        "@babel/plugin-transform-runtime": "^7.4.4",
        "@babel/polyfill": "^7.4.4",
        "@babel/preset-env": "^7.1.0",
        "@babel/register": "^7.9.0",
        "@blueprintjs/select": "^3.11.2",
        "@enonic/fnv-plus": "^1.3.0",
        "@istanbuljs/nyc-config-typescript": "^0.1.3",
        "@jupyter-widgets/base": "^2.0.1",
        "@jupyter-widgets/controls": "^1.5.2",
        "@jupyter-widgets/jupyterlab-manager": "^1.0.2",
        "@jupyter-widgets/output": "^2.0.1",
        "@nteract/transform-dataresource": "^4.3.5",
        "@nteract/transform-geojson": "^3.2.3",
        "@nteract/transform-model-debug": "^3.2.3",
        "@nteract/transform-plotly": "^6.0.0",
        "@nteract/transform-vega": "^6.0.3",
        "@nteract/transforms": "^4.4.7",
        "@phosphor/widgets": "^1.9.3",
        "@sinonjs/fake-timers": "^6.0.1",
        "@types/ansi-regex": "^4.0.0",
        "@types/chai": "^4.1.2",
        "@types/chai-arrays": "^1.0.2",
        "@types/chai-as-promised": "^7.1.0",
        "@types/copy-webpack-plugin": "^4.4.2",
        "@types/cors": "^2.8.6",
        "@types/debug": "^4.1.5",
        "@types/dedent": "^0.7.0",
        "@types/del": "^3.0.0",
        "@types/diff-match-patch": "^1.0.32",
        "@types/download": "^6.2.2",
        "@types/enzyme": "^3.1.14",
        "@types/event-stream": "^3.3.33",
        "@types/fs-extra": "^5.0.1",
        "@types/get-port": "^3.2.0",
        "@types/glob": "^5.0.35",
        "@types/html-webpack-plugin": "^3.2.0",
        "@types/iconv-lite": "^0.0.1",
        "@types/jsdom": "^11.12.0",
        "@types/loadable__component": "^5.10.0",
        "@types/loader-utils": "^1.1.3",
        "@types/lodash": "^4.14.104",
        "@types/md5": "^2.1.32",
        "@types/memoize-one": "^4.1.1",
        "@types/mocha": "^5.2.7",
        "@types/nock": "^10.0.3",
        "@types/node": "^10.14.18",
        "@types/node-fetch": "^2.5.7",
        "@types/pdfkit": "^0.7.36",
        "@types/promisify-node": "^0.4.0",
        "@types/request": "^2.47.0",
        "@types/semver": "^5.5.0",
        "@types/shortid": "^0.0.29",
        "@types/sinon": "^7.5.1",
        "@types/sinonjs__fake-timers": "^6.0.1",
        "@types/socket.io": "^2.1.4",
        "@types/stack-trace": "0.0.29",
        "@types/temp": "^0.8.32",
        "@types/tmp": "0.0.33",
        "@types/untildify": "^3.0.0",
        "@types/uuid": "^3.4.3",
        "@types/vscode": "^1.47.0",
        "@types/vscode-notebook-renderer": "^1.48.0",
        "@types/webpack-bundle-analyzer": "^2.13.0",
        "@types/winreg": "^1.2.30",
        "@types/ws": "^6.0.1",
        "@types/xml2js": "^0.4.2",
        "@typescript-eslint/eslint-plugin": "^3.10.1",
        "@typescript-eslint/parser": "^3.10.1",
        "acorn": "^6.4.1",
        "ansi-to-html": "^0.6.7",
        "brfs": "^2.0.2",
        "cache-loader": "^4.1.0",
        "canvas": "^2.6.0",
        "chai": "^4.1.2",
        "chai-arrays": "^2.0.0",
        "chai-as-promised": "^7.1.1",
        "chai-http": "^4.3.0",
        "codecov": "^3.7.1",
        "colors": "^1.2.1",
        "copy-webpack-plugin": "^5.1.1",
        "cors": "^2.8.5",
        "cross-env": "^6.0.3",
        "cross-spawn": "^6.0.5",
        "css-loader": "^1.0.1",
        "dedent": "^0.7.0",
        "deemon": "^1.4.0",
        "del": "^3.0.0",
        "download": "^7.0.0",
        "enzyme": "^3.7.0",
        "eslint": "^7.7.0",
        "eslint-config-airbnb": "^18.2.0",
        "eslint-config-prettier": "^6.11.0",
        "eslint-plugin-import": "^2.22.0",
        "eslint-plugin-jsx-a11y": "^6.3.1",
        "eslint-plugin-prettier": "^3.1.4",
        "event-stream": "3.3.4",
        "expose-loader": "^0.7.5",
        "express": "^4.17.1",
        "extract-zip": "^1.6.7",
        "fast-xml-parser": "^3.16.0",
        "file-loader": "^5.1.0",
        "filemanager-webpack-plugin-fixed": "^2.0.9",
        "flat": "^4.0.0",
        "fork-ts-checker-webpack-plugin": "^4.1.6",
        "gulp": "^4.0.0",
        "gulp-azure-storage": "^0.11.1",
        "gulp-chmod": "^2.0.0",
        "gulp-filter": "^5.1.0",
        "gulp-gunzip": "^1.1.0",
        "gulp-rename": "^1.4.0",
        "gulp-sourcemaps": "^2.6.4",
        "gulp-typescript": "^4.0.1",
        "gulp-untar": "0.0.8",
        "gulp-vinyl-zip": "^2.1.2",
        "html-webpack-plugin": "^3.2.0",
        "husky": "^1.1.2",
        "immutable": "^4.0.0-rc.12",
        "jsdom": "^15.0.0",
        "json-loader": "^0.5.7",
        "less": "^3.9.0",
        "less-loader": "^5.0.0",
        "less-plugin-inline-urls": "^1.2.0",
        "loader-utils": "^1.1.0",
        "lolex": "^5.1.2",
        "memoize-one": "^5.1.1",
        "mocha": "^8.1.1",
        "mocha-junit-reporter": "^1.17.0",
        "mocha-multi-reporters": "^1.1.7",
        "nocache": "^2.1.0",
        "nock": "^10.0.6",
        "node-has-native-dependencies": "^1.0.2",
        "node-html-parser": "^1.1.13",
        "nyc": "^15.0.0",
        "playwright-chromium": "^0.13.0",
        "plotly.js-dist": "^1.55.1",
        "postcss": "^7.0.27",
        "postcss-cssnext": "^3.1.0",
        "postcss-import": "^12.0.1",
        "postcss-loader": "^3.0.0",
        "prettier": "^2.0.2",
        "range-inclusive": "^1.0.2",
        "raw-loader": "^0.5.1",
        "relative": "^3.0.2",
        "remove-files-webpack-plugin": "^1.4.0",
        "requirejs": "^2.3.6",
        "rewiremock": "^3.13.0",
        "rimraf": "^3.0.2",
        "sass-loader": "^7.1.0",
        "serialize-javascript": "^3.1.0",
        "shortid": "^2.2.8",
        "sinon": "^8.0.1",
        "slickgrid": "^2.4.17",
        "socket.io": "^2.3.0",
        "source-map-support": "^0.5.12",
        "style-loader": "^0.23.1",
        "styled-jsx": "^3.1.0",
        "svg-inline-loader": "^0.8.0",
        "terser-webpack-plugin": "^3.1.0",
        "thread-loader": "^2.1.3",
        "transform-loader": "^0.2.4",
        "ts-loader": "^5.3.0",
        "ts-mock-imports": "^1.3.0",
        "ts-mockito": "^2.5.0",
        "ts-node": "^8.3.0",
        "tsconfig-paths-webpack-plugin": "^3.2.0",
        "tslint": "^5.20.1",
        "tslint-config-prettier": "^1.18.0",
        "tslint-eslint-rules": "^5.4.0",
        "tslint-microsoft-contrib": "^5.0.3",
        "tslint-plugin-prettier": "^2.1.0",
        "typemoq": "^2.1.0",
        "typescript": "^4.0.2",
        "typescript-formatter": "^7.1.0",
        "unicode-properties": "^1.3.1",
        "url-loader": "^1.1.2",
        "uuid": "^3.3.2",
        "vinyl-fs": "^3.0.3",
        "vsce": "^1.59.0",
        "vscode-debugadapter-testsupport": "^1.27.0",
        "vscode-test": "^1.2.3",
        "webpack": "^4.33.0",
        "webpack-bundle-analyzer": "^3.6.0",
        "webpack-cli": "^3.1.2",
        "webpack-fix-default-import-plugin": "^1.0.3",
        "webpack-merge": "^4.1.4",
        "webpack-node-externals": "^1.7.2",
        "webpack-require-from": "^1.8.0",
        "why-is-node-running": "^2.0.3",
        "wtfnode": "^0.8.0",
        "yargs": "^15.3.1"
    },
    "__metadata": {
        "id": "f1f59ae4-9318-4f3c-a9b5-81b2eaa5f8a5",
        "publisherDisplayName": "Microsoft",
        "publisherId": "998b010b-e2af-44a5-a6cd-0b5fd3b9b6f8"
    }
}
